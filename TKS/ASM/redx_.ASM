;
; ЙННННННННННННННННННННННННННННННННННННННННННННННННННННННННННННННННН»
; є This file is generated by The Interactive Disassembler (IDA)    є
; є Copyright (c) 1998 by DataRescue sprl, <ida@datarescue.com>     є
; ИНННННННННННННННННННННННННННННННННННННННННННННННННННННННННННННННННј
;
;
 
 
; File Name   :	D:\ASM\PROJECTS\W\REDX.COM
; Format      :	MS DOS COM File
; Base Address:	1000h Range: 10100h - 10233h Loaded length: 0133h

p486n

; ННННННННННННННННННННННННННННННННННННННННННННННННННННННННННННННННННННННННННН

; Segment type:	Pure code
seg000		segment	byte public 'CODE' use16
		assume cs:seg000
		org 100h
		assume es:nothing, ss:nothing, ds:seg000, fs:nothing, gs:nothing

; ЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫ

;		S u b r	o u t i	n e

		public start
start		proc near
		jmp	short loc_0_157
; ДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД
word_0_102	dw 0			; DATA XREF: start+57w	sub_0_1B8+3Er
word_0_104	dw 0			; DATA XREF: sub_0_165w sub_0_165+18w	...
		db  22h	; "
		db  23h	; #
		db  24h	; $
		db  25h	; %
		db  26h	; &
		db  27h	; '
		db  28h	; (
		db  29h	; )
		db  66h	; f
		db  87h	; ‡
		db  3Bh	; ;
		db  2Dh	; -
		db  2Eh	; .
		db  2Fh	; /
		db  30h	; 0
		db  31h	; 1
		db  23h	; #
		db 0E0h	; а
		db 0E1h	; б
		db 0E2h	; в
		db 0E3h	; г
		db 0E4h	; д
		db 0E5h	; е
		db 0E6h	; ж
		db 0E7h	; з
		db 0E7h	; з
		db 0E9h	; й
		db 0EAh	; к
		db 0EBh	; л
		db  30h	; 0
		db  31h	; 1
		db  32h	; 2
		db  24h	; $
		db 0E0h	; а
		db 0E1h	; б
		db 0E2h	; в
		db 0E3h	; г
		db 0E8h	; и
		db  2Ah	; *
		db 0EAh	; к
		db 0E7h	; з
		db 0E8h	; и
		db 0E9h	; й
		db  2Fh	; /
		db  30h	; 0
		db  6Dh	; m
		db  32h	; 2
		db  33h	; 3
		db  25h	; %
		db 0E1h	; б
		db 0E2h	; в
		db 0E3h	; г
		db 0E4h	; д
		db 0E5h	; е
		db 0E7h	; з
		db 0E7h	; з
		db 0E8h	; и
		db 0E9h	; й
		db 0EAh	; к
		db 0EBh	; л
		db 0ECh	; м
		db 0EDh	; н
		db 0EEh	; о
		db 0EFh	; п
		db  26h	; &
		db 0E6h	; ж
		db 0E7h	; з
		db  29h	; )
		db  59h	; Y
		db  5Ah	; Z
		db  2Ch	; ,
		db 0ECh	; м
		db 0EDh	; н
		db 0EEh	; о
		db 0EFh	; п
		db 0F0h	; р
		db  32h	; 2
		db  62h	; b
		db  34h	; 4
		db 0F4h	; ф
		db    0	;  
; ДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД

loc_0_157:				; CODE XREF: startj
		mov	word_0_102, 0B800h
		call	sub_0_165
		mov	ax, 4C00h
		int	21h		; DOS -	2+ - QUIT WITH EXIT CODE (EXIT)
start		endp			; AL = exit code


; ЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫ

;		S u b r	o u t i	n e

sub_0_165	proc near		; CODE XREF: start+5Dp
		mov	word_0_104, 0FFF0h

loc_0_16B:				; CODE XREF: sub_0_165+21j
		mov	dx, 0
		mov	cx, 10h

loc_0_171:				; CODE XREF: sub_0_165+10j
		call	sub_0_1B8
		inc	dx
		loop	loc_0_171
		call	sub_0_193
		call	sub_0_209
		inc	word_0_104
		cmp	word_0_104, 50h
		jnz	loc_0_16B
		call	sub_0_18C
		retn	
sub_0_165	endp


; ЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫ

;		S u b r	o u t i	n e

sub_0_18C	proc near		; CODE XREF: sub_0_165+23p
		in	al, 61h		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	НЛН OR	03H=spkr ON
					; 1: Tmr 2 data	Нј  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		and	al, 0FCh
		out	61h, al		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	НЛН OR	03H=spkr ON
					; 1: Tmr 2 data	Нј  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		retn	
sub_0_18C	endp


; ЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫ

;		S u b r	o u t i	n e

sub_0_193	proc near		; CODE XREF: sub_0_165+12p
		mov	dx, 7D0h
		test	word_0_104, 4
		jz	loc_0_1A1
		mov	dx, 0BB8h

loc_0_1A1:				; CODE XREF: sub_0_193+9j
		in	al, 61h		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	НЛН OR	03H=spkr ON
					; 1: Tmr 2 data	Нј  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		test	al, 3
		jnz	loc_0_1AF
		or	al, 3
		out	61h, al		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	НЛН OR	03H=spkr ON
					; 1: Tmr 2 data	Нј  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		mov	al, 0B6h
		out	43h, al		; Timer	8253-5 (AT: 8254.2).

loc_0_1AF:				; CODE XREF: sub_0_193+12j
		mov	ax, dx
		out	42h, al		; Timer	8253-5 (AT: 8254.2).
		mov	al, ah
		out	42h, al		; Timer	8253-5 (AT: 8254.2).
		retn	
sub_0_193	endp


; ЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫ

;		S u b r	o u t i	n e

sub_0_1B8	proc near		; CODE XREF: sub_0_165+Cp
		push	di
		push	cx
		push	dx
		mov	bx, 106h
		add	bx, dx
		add	dx, word_0_104
		or	dx, dx
		js	loc_0_205
		cmp	dx, 50h
		jnb	loc_0_205
		mov	di, 0C80h
		add	di, dx
		add	di, dx
		sub	dx, word_0_104
		mov	cx, 5

loc_0_1DB:				; CODE XREF: sub_0_1B8+4Bj
		mov	ah, 7
		mov	al, [bx]
		sub	al, 7
		add	al, cl
		sub	al, dl
		cmp	cx, 5
		jnz	loc_0_1F6
		mov	ah, 0Fh
		test	word_0_104, 3
		jz	loc_0_1F6
		mov	al, 20h

loc_0_1F6:				; CODE XREF: sub_0_1B8+30j
					; sub_0_1B8+3Aj
		push	word_0_102
		pop	es
		stosw
		add	bx, 10h
		add	di, 9Eh
		loop	loc_0_1DB

loc_0_205:				; CODE XREF: sub_0_1B8+Ej
					; sub_0_1B8+13j
		pop	dx
		pop	cx
		pop	di
		retn	
sub_0_1B8	endp


; ЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫ

;		S u b r	o u t i	n e
; Attributes: bp-based frame

sub_0_209	proc near		; CODE XREF: sub_0_165+15p

var_5		= byte ptr -5
var_4		= dword	ptr -4

		push	bp
		mov	bp, sp
		sub	sp, 6
		mov	word ptr [bp+var_4+2], 40h
		mov	word ptr [bp+var_4], 6Ch
		les	bx, [bp+var_4]
		mov	al, es:[bx]
		mov	[bp+var_5], al
		jmp	short $+2

loc_0_224:				; CODE XREF: sub_0_209+24j
		les	bx, [bp+var_4]
		mov	al, es:[bx]
		cmp	al, [bp+var_5]
		jz	loc_0_224
		mov	sp, bp
		pop	bp
		retn	
sub_0_209	endp

seg000		ends


		end start
